// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
//
//      Changes to this file will be lost if the code is regenerated.
//
//      This file was generated from this data file:
//      E:\RL_CardGame_Build\Assets/GameDataEditor/Resources/gde_data.txt
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using UnityEngine.Video;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDEgoddessAttiData : IGDEData
    {
        static string agileKey = "agile";
		int _agile;
        public int agile
        {
            get { return _agile; }
            set {
                if (_agile != value)
                {
                    _agile = value;
					GDEDataManager.SetInt(_key, agileKey, _agile);
                }
            }
        }

        static string staminaKey = "stamina";
		int _stamina;
        public int stamina
        {
            get { return _stamina; }
            set {
                if (_stamina != value)
                {
                    _stamina = value;
					GDEDataManager.SetInt(_key, staminaKey, _stamina);
                }
            }
        }

        static string recoveryKey = "recovery";
		int _recovery;
        public int recovery
        {
            get { return _recovery; }
            set {
                if (_recovery != value)
                {
                    _recovery = value;
					GDEDataManager.SetInt(_key, recoveryKey, _recovery);
                }
            }
        }

        static string leaderKey = "leader";
		int _leader;
        public int leader
        {
            get { return _leader; }
            set {
                if (_leader != value)
                {
                    _leader = value;
					GDEDataManager.SetInt(_key, leaderKey, _leader);
                }
            }
        }

        public GDEgoddessAttiData(string key) : base(key)
        {
            GDEDataManager.RegisterItem(this.SchemaName(), key);
        }
        public override Dictionary<string, object> SaveToDict()
		{
			var dict = new Dictionary<string, object>();
			dict.Add(GDMConstants.SchemaKey, "goddessAtti");
			
            dict.Merge(true, agile.ToGDEDict(agileKey));
            dict.Merge(true, stamina.ToGDEDict(staminaKey));
            dict.Merge(true, recovery.ToGDEDict(recoveryKey));
            dict.Merge(true, leader.ToGDEDict(leaderKey));
            return dict;
		}

        public override void UpdateCustomItems(bool rebuildKeyList)
        {
        }

        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;

			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetInt(agileKey, out _agile);
                dict.TryGetInt(staminaKey, out _stamina);
                dict.TryGetInt(recoveryKey, out _recovery);
                dict.TryGetInt(leaderKey, out _leader);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            _agile = GDEDataManager.GetInt(_key, agileKey, _agile);
            _stamina = GDEDataManager.GetInt(_key, staminaKey, _stamina);
            _recovery = GDEDataManager.GetInt(_key, recoveryKey, _recovery);
            _leader = GDEDataManager.GetInt(_key, leaderKey, _leader);
        }

        public GDEgoddessAttiData ShallowClone()
		{
			string newKey = Guid.NewGuid().ToString();
			GDEgoddessAttiData newClone = new GDEgoddessAttiData(newKey);

            newClone.agile = agile;
            newClone.stamina = stamina;
            newClone.recovery = recovery;
            newClone.leader = leader;

            return newClone;
		}

        public GDEgoddessAttiData DeepClone()
		{
			GDEgoddessAttiData newClone = ShallowClone();
            return newClone;
		}

        public void Reset_agile()
        {
            GDEDataManager.ResetToDefault(_key, agileKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(agileKey, out _agile);
        }

        public void Reset_stamina()
        {
            GDEDataManager.ResetToDefault(_key, staminaKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(staminaKey, out _stamina);
        }

        public void Reset_recovery()
        {
            GDEDataManager.ResetToDefault(_key, recoveryKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(recoveryKey, out _recovery);
        }

        public void Reset_leader()
        {
            GDEDataManager.ResetToDefault(_key, leaderKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(leaderKey, out _leader);
        }

        public void ResetAll()
        {
             #if !UNITY_WEBPLAYER
             GDEDataManager.DeregisterItem(this.SchemaName(), _key);
             #else

            GDEDataManager.ResetToDefault(_key, agileKey);
            GDEDataManager.ResetToDefault(_key, staminaKey);
            GDEDataManager.ResetToDefault(_key, recoveryKey);
            GDEDataManager.ResetToDefault(_key, leaderKey);


            #endif

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
